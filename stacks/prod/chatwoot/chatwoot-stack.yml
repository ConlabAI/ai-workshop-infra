version: "3.8"

services:
  chatwoot: &chatwoot
    image: chatwoot/chatwoot:latest
    environment:
      - FRONTEND_URL
      - ENABLE_ACCOUNT_SIGNUP=false
      - REDIS_URL=redis://redis
      - REDIS_PASSWORD
      - POSTGRES_HOST=postgres
      - POSTGRES_USERNAME
      - POSTGRES_DB
      - POSTGRES_PASSWORD
      - ACTIVE_STORAGE_SERVICE=local
      - MAILER_SENDER_EMAIL
      - SMTP_ADDRESS=smtp.sendgrid.net
      - SMTP_AUTHENTICATION=plain
      - SMTP_DOMAIN
      - SMTP_ENABLE_STARTTLS_AUTO=true
      - SMTP_PORT=587
      - SMTP_USERNAME=apikey
      - SMTP_PASSWORD
      - SECRET_KEY_BASE
      - NODE_ENV=production
      - RAILS_ENV=production
      - INSTALLATION_ENV=docker
      - RACK_TIMEOUT_SERVICE_TIMEOUT=45
      - ENABLE_RACK_ATTACK=false
      - LOG_LEVEL
    volumes:
      - chatwoot_data:/app/storage
    networks:
      - default
      - public_network
    depends_on:
      - postgres
      - redis

    entrypoint: docker/entrypoints/rails.sh
    command: ["bundle", "exec", "rails", "s", "-p", "3000", "-b", "0.0.0.0"]

  sidekiq:
    <<: *chatwoot
    networks:
      - default
      #- agentbot
    command: ["bundle", "exec", "sidekiq", "-C", "config/sidekiq.yml"]

  postgres:
    image: postgres:15.3
    environment:
      - POSTGRES_HOST
      - POSTGRES_USERNAME
      - POSTGRES_DB
      - POSTGRES_PASSWORD
    volumes:
      - pg_data:/var/lib/postgresql/data

  redis:
    image: redis:7.2.5-alpine
    command: ["sh", "-c", 'redis-server --requirepass "${REDIS_PASSWORD:?}"']
    volumes:
      - redis_data:/data

volumes:
  pg_data:
  chatwoot_data:
  redis_data:

networks:
  public_network:
    external: true
  #agentbot:
  #  external: true
